{"version":3,"sources":["Numbers.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","buttonBox","display","justifyContent","answerBox","textAlign","padding","generate","Math","floor","random","Numbers","classes","useState","numbers","setNumbers","show","setShow","Fragment","Container","fixed","Typography","component","Box","className","Button","variant","onClick","speechSynthesis","console","error","utterThis","SpeechSynthesisUtterance","lang","speak","color","root","flexGrow","menuButton","marginRight","spacing","title","link","textDecoration","App","AppBar","position","Toolbar","IconButton","edge","aria-label","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAQMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,UAAW,CACTC,QAAS,OACTC,eAAgB,iBAElBC,UAAW,CACTC,UAAW,SACXC,QAAS,SACTJ,QAAS,aAIb,SAASK,IACP,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,UAwCVC,MArCf,WACE,IAAMC,EAAUd,IADC,EAEae,mBAASN,KAFtB,mBAEVO,EAFU,KAEDC,EAFC,OAGOF,oBAAS,GAHhB,mBAGVG,EAHU,KAGJC,EAHI,KAmBjB,OACE,cAAC,IAAMC,SAAP,UACE,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,cAACC,EAAA,EAAD,CAAYC,UAAU,MAAtB,SACE,cAACC,EAAA,EAAD,CAAKD,UAAU,OAAOE,UAAWZ,EAAQR,UAAzC,SACGY,EAAOF,EAAU,QAGtB,eAACO,EAAA,EAAD,CAAYC,UAAU,MAAME,UAAWZ,EAAQX,UAA/C,UACE,cAACwB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAxBtB,WACZ,GAA+B,qBAApBC,gBACTC,QAAQC,MAAM,wDACT,CACL,IAAMC,EAAY,IAAIC,yBAAyBlB,GAC/CiB,EAAUE,KAAO,KACjBL,gBAAgBM,MAAMH,KAkBlB,mBACA,cAACN,EAAA,EAAD,CAAQC,QAAQ,YAAYS,MAAM,YAAYR,QAZnC,kBAAMV,GAAQ,IAYzB,yBACA,cAACQ,EAAA,EAAD,CAAQC,QAAQ,YAAYS,MAAM,UAAUR,QAjBjC,WACjBV,GAAQ,GACRF,EAAWR,MAeL,2B,eCpCJT,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAavC,EAAMwC,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,GAEZK,KAAM,CACJC,eAAgB,OAChBR,MAAO,aA8BIS,MA1Bf,WACE,IAAMhC,EAAUd,IAEhB,OACE,cAAC,IAAD,UACC,sBAAK0B,UAAWZ,EAAQwB,KAAxB,UACC,cAACS,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQzB,UAAWZ,EAAQ0B,WAAYH,MAAM,UAAUe,aAAW,OAAnF,SACE,cAAC,IAAD,MAEF,cAAC7B,EAAA,EAAD,CAAYK,QAAQ,KAAKF,UAAWZ,EAAQ6B,MAA5C,SACE,cAAC,IAAD,CAAMU,GAAG,WAAW3B,UAAWZ,EAAQ8B,KAAvC,4BAIN,cAAC,IAAD,UACE,cAAC,IAAD,CAAOU,KAAK,WAAZ,SACE,cAAC,EAAD,cCxCKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.04ad26f1.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  buttonBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  answerBox: {\n    textAlign: \"center\",\n    padding: \"10vh 0\",\n    display: \"block\",\n  }\n}));\n\nfunction generate() {\n  return Math.floor(Math.random() * 100);\n}\n\nfunction Numbers() {\n  const classes = useStyles();\n  const [numbers, setNumbers] = useState(generate());\n  const [show, setShow] = useState(false);\n  const speak = () => {\n    if (typeof speechSynthesis === 'undefined') {\n      console.error(\"There is no speech synthesis API in this browser\");\n    } else {\n      const utterThis = new SpeechSynthesisUtterance(numbers);\n      utterThis.lang = \"fr\";\n      speechSynthesis.speak(utterThis);\n    }\n  };\n  const nextNumber = () => {\n    setShow(false);\n    setNumbers(generate())\n  };\n  const showAnswer = () => setShow(true);\n\n  return (\n    <React.Fragment>\n      <Container fixed>\n        <Typography component=\"div\">\n          <Box component=\"span\" className={classes.answerBox}>\n            {show ? numbers : \"?\"}\n          </Box>\n        </Typography>\n        <Typography component=\"div\" className={classes.buttonBox}>\n          <Button variant=\"contained\" onClick={speak}>Speak</Button>\n          <Button variant=\"contained\" color=\"secondary\" onClick={showAnswer}>Show Answer</Button>\n          <Button variant=\"contained\" color=\"primary\" onClick={nextNumber}>Next</Button>\n        </Typography>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default Numbers;\n","import './App.css';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport Numbers from \"./Numbers\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"white\",\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n    \n  return (\n    <Router>\n     <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            <Link to=\"/numbers\" className={classes.link}>Numbers</Link>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Switch>\n        <Route path=\"/numbers\">\n          <Numbers/>\n        </Route>\n      </Switch>\n     </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}